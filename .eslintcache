[{"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\index.tsx":"1","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\reportWebVitals.ts":"2","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\App.tsx":"3","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\GuestNameContext.tsx":"4","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Login\\Login.tsx":"5","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\config.ts":"6","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\ProtectedRoute.tsx":"7","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\UserContext.tsx":"8","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\LoginRoute.tsx":"9","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Loader\\Loader.tsx":"10","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Room\\Room.tsx":"11","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\NavigateRooms\\NavigateRooms.tsx":"12","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Login\\Particles.config.tsx":"13","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\socket.ts":"14","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\Editor\\MonacoEditor.tsx":"15","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\VoiceChat\\VoiceChat.tsx":"16","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\InputOutputFile\\InputOutputFile.tsx":"17","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\Editor\\MonacoAdapter.js":"18","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\TextChat\\index.tsx":"19","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\TextChat\\ChatMessage.jsx":"20","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\TextChat\\ChatMessage-styles.ts":"21","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\QuestionsPane\\Tabs.tsx":"22","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\QuestionsPane\\Settings.tsx":"23","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\SettingsContext.tsx":"24"},{"size":500,"mtime":1614171551600,"results":"25","hashOfConfig":"26"},{"size":425,"mtime":1614063904490,"results":"27","hashOfConfig":"26"},{"size":2317,"mtime":1614168222354,"results":"28","hashOfConfig":"26"},{"size":979,"mtime":1614074757923,"results":"29","hashOfConfig":"26"},{"size":4595,"mtime":1614068015571,"results":"30","hashOfConfig":"26"},{"size":518,"mtime":1614100178055,"results":"31","hashOfConfig":"26"},{"size":788,"mtime":1614063905475,"results":"32","hashOfConfig":"26"},{"size":842,"mtime":1614060429347,"results":"33","hashOfConfig":"26"},{"size":624,"mtime":1614063640790,"results":"34","hashOfConfig":"26"},{"size":5355,"mtime":1614072443573,"results":"35","hashOfConfig":"26"},{"size":5552,"mtime":1614158442859,"results":"36","hashOfConfig":"26"},{"size":3365,"mtime":1614083562809,"results":"37","hashOfConfig":"26"},{"size":1429,"mtime":1614063905223,"results":"38","hashOfConfig":"26"},{"size":111,"mtime":1614063904510,"results":"39","hashOfConfig":"26"},{"size":2377,"mtime":1614171417035,"results":"40","hashOfConfig":"26"},{"size":5858,"mtime":1614157810928,"results":"41","hashOfConfig":"26"},{"size":4092,"mtime":1614165555623,"results":"42","hashOfConfig":"26"},{"size":4771,"mtime":1614033352843,"results":"43","hashOfConfig":"26"},{"size":4091,"mtime":1614108640884,"results":"44","hashOfConfig":"26"},{"size":2677,"mtime":1613654435662,"results":"45","hashOfConfig":"26"},{"size":1360,"mtime":1614063904362,"results":"46","hashOfConfig":"26"},{"size":3494,"mtime":1614164765167,"results":"47","hashOfConfig":"26"},{"size":3037,"mtime":1614171408956,"results":"48","hashOfConfig":"26"},{"size":905,"mtime":1614171398951,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1mgfku0",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\index.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\reportWebVitals.ts",[],["103","104"],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\App.tsx",["105"],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\GuestNameContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\config.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\ProtectedRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\UserContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\LoginRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Loader\\Loader.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Room\\Room.tsx",["106"],"import React, { useState, createRef, useRef, useContext } from \"react\";\nimport InputOutputFile from \"component/InputOutputFile/InputOutputFile\";\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\nimport \"react-reflex/styles.css\";\nimport style from \"./Room.module.css\";\nimport { socket } from \"service/socket\";\nimport { useSnackbar } from \"notistack\";\nimport ChatApp from \"component/TextChat\";\nimport VoiceChat from \"component/VoiceChat/VoiceChat\";\nimport { useParams } from \"react-router-dom\";\nimport MonacoEditor from \"component/Editor/MonacoEditor\";\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.min.css.map\";\nimport clsx from \"clsx\";\nimport { GuestNameContext } from \"service/GuestNameContext\";\nimport { UserContext } from \"service/UserContext\";\nimport { UserContextTypes, GuestNameContextTypes, UserInfoSS } from \"types\";\nimport { DUMMY_AVATAR_IMAGE } from \"config\";\nimport TabsPanel from \"component/QuestionsPane/Tabs\";\n\nconst Dashboard = () => {\n  const { enqueueSnackbar } = useSnackbar();\n  const { user } = useContext(UserContext) as UserContextTypes;\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\n  const [code, setCode] = useState<string>();\n  const MonacoEditorRef = useRef<any>();\n  const TextAreaRef = createRef<HTMLDivElement>();\n  const [rows, setRows] = useState(4);\n  const [sid, setSid] = useState(\"\");\n  const { id } = useParams<Record<string, string>>();\n\n  const prepareData = (): UserInfoSS => {\n    return {\n      name: user?.name ? user.name : guestName,\n      image_link: user?.image_link ? user.image_link : DUMMY_AVATAR_IMAGE,\n      roomID: id,\n    };\n  };\n\n  const displayNotification = (data: UserInfoSS, enter: boolean) => {\n    const text = enter ? \"joined the room\" : \"left the room\";\n    const variantStyle = enter ? \"success\" : \"error\";\n    enqueueSnackbar(`${data.name} ${text}`, {\n      variant: variantStyle,\n    });\n  };\n\n  React.useEffect(() => {\n    // socket.emit(\"user-data\", prepareData());\n    socket.emit(\"join-room\", prepareData());\n\n    socket.on(\"store-sid\", (id: string) => setSid(id));\n    socket.on(\"new-user-joined\", (data: UserInfoSS) => {\n      displayNotification(data, true);\n    });\n    socket.on(\"room-full\", () => {\n      enqueueSnackbar(\"room is filled biatches\", { variant: \"warning\" });\n    });\n\n    socket.on(\"connected\", (data: Record<string, unknown>) => {\n      console.log(`I'm Connected with the backend ${data}`);\n    });\n    socket.on(\"user-left\", (data: UserInfoSS) => {\n      displayNotification(data, false);\n    });\n  }, []);\n\n  const resetEditorLayout = () => {\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\n    const adjustedRows = height > 340 ? height / 27 : height / 45;\n    setRows(Math.floor(adjustedRows));\n    MonacoEditorRef.current.layout();\n  };\n\n  return (\n    <div className={style.root}>\n      <ReflexContainer orientation=\"horizontal\">\n        <ReflexElement className={style.header} flex={0.08}>\n          Caucus\n        </ReflexElement>\n        <ReflexElement>\n          <ReflexContainer orientation=\"vertical\">\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement className={style[\"pane-color\"]}>\n                  <TabsPanel />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* End of 1st content */}\n            <ReflexSplitter\n              className={clsx(style.splitter, style[\"splitter-verticle\"])}\n              onStopResize={() => resetEditorLayout()}\n            />\n            <ReflexElement flex={0.5}>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement style={{ display: \"flex\" }}>\n                  <MonacoEditor code={code} setCode={setCode} MonacoEditorRef={MonacoEditorRef} />\n                </ReflexElement>\n                <ReflexSplitter\n                  className={clsx(style.splitter, style[\"splitter-horizontal\"])}\n                  onStopResize={() => resetEditorLayout()}\n                />\n                <ReflexElement flex={0.3}>\n                  <InputOutputFile rows={rows} TextAreaRef={TextAreaRef} />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* 3rd content */}\n            <ReflexSplitter\n              className={clsx(style.splitter, style[\"splitter-verticle\"])}\n              onStopResize={() => resetEditorLayout()}\n            />\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement className={style[\"pane-color\"]} flex={0.3}>\n                  <h2>Video Icons</h2>\n                  <VoiceChat params={id} />\n                </ReflexElement>\n                <ReflexSplitter className={clsx(style.splitter, style[\"splitter-horizontal\"])} />\n                <ReflexElement className={style[\"chat-app\"]}>\n                  {/* Chat App Component */}\n                  <ChatApp userInfo={prepareData()} socketID={sid} />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n          </ReflexContainer>\n        </ReflexElement>\n        <ReflexElement className={style.footer} flex={0.028}>\n          Made with <span>&#9829;</span> by Rishabh Malhotra{\"  \"}•{\"  \"}\n          <a href=\"https://github.com/Rishabh-malhotraa/codeforces-diary\" target=\"__blank\">\n            Github\n          </a>\n        </ReflexElement>\n      </ReflexContainer>\n    </div>\n  );\n};\n\nexport default Dashboard;\n","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\NavigateRooms\\NavigateRooms.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\pages\\Login\\Particles.config.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\socket.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\Editor\\MonacoEditor.tsx",["107"],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\VoiceChat\\VoiceChat.tsx",["108","109"],"//@ts-nocheck\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Peer, { Instance, SignalData } from \"simple-peer\";\nimport { socket } from \"service/socket\";\nimport { Avatar, Button } from \"@material-ui/core\";\n\ninterface MediaSrcType {\n  srcObject: MediaStream;\n}\ninterface PeerRefType {\n  peerID: string;\n  peer: Instance;\n}\n\ninterface UserJoinedPayload {\n  signal: SignalData;\n  callerID: string;\n  stream: MediaStream;\n}\n\ninterface ReturnSignalPayload {\n  signal: SignalData;\n  id: string;\n}\n\nconst Video = ({ peer, muted }: { peer: Instance; muted: boolean }) => {\n  const ref = useRef({} as MediaSrcType);\n\n  useEffect(() => {\n    peer.on(\"stream\", (stream: MediaStream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  console.log(ref);\n  return (\n    <video\n      muted={muted}\n      playsInline\n      autoPlay\n      //@ts-ignore\n      ref={ref}\n      style={{ width: \"150px\", height: \"150px\" }}\n    />\n  );\n};\n\nexport const Room = ({ params }: { params: string }) => {\n  const [peers, setPeers] = useState<Instance[]>([]);\n  const userVideo = useRef({} as MediaSrcType);\n  const [stream, setStream] = useState<MediaStream>();\n  const peersRef = useRef([] as PeerRefType[]);\n  const [audioMuted, setAudioMuted] = useState(false);\n  const roomID = params;\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then((stream) => {\n      setStream(stream);\n      if (userVideo.current) {\n        userVideo.current.srcObject = stream;\n      }\n    });\n\n    // okay we are joining a room with the given room id huh\n    socket.emit(\"join-room\", roomID);\n    // fetching all the users from the socker io server\n    socket.on(\"all-users\", (users: string[]) => {\n      console.log(users);\n      const peers: Instance[] = [];\n      // looping thorugh all the users we got we want to create a new peer for them -- because peer meshes\n      users.forEach((userID) => {\n        const peer = createPeer(userID, socket.id, stream);\n        peersRef.current.push({\n          peerID: userID,\n          peer,\n        });\n        peers.push(peer);\n      });\n      setPeers(peers);\n    });\n\n    socket.on(\"user-joined\", (payload: UserJoinedPayload) => {\n      /**\n       * @signal - this is the incomming signalz\n       * @calledID - is the id of the user which is calling us\n       * @stream - this is basically our own stream of data\n       *  */\n      const peer = addPeer(payload.signal, payload.callerID, stream);\n      peersRef.current.push({\n        peerID: payload.callerID,\n        peer,\n      });\n\n      setPeers((users) => [...users, peer]);\n    });\n\n    socket.on(\"receiving-returned-signal\", (payload: ReturnSignalPayload) => {\n      const item = peersRef.current.find((p) => p.peerID === payload.id);\n      if (item) item.peer.signal(payload.signal);\n    });\n  }, []);\n\n  /**\n   * @userToSignal - socekt_id of the person who is already in the room (person being called)\n   * @calledID - SID of person who just joined, caller\n   * @stream - stream<audio,video> data of the person who is calling(caller)\n   *  */\n  function createPeer(userToSignal: string, callerID: string, stream: MediaStream) {\n    const peer = new Peer({\n      // true if this is the peer initiating the connection -- immediately on construction the peer emits the signal\n      initiator: true,\n      trickle: false,\n      stream,\n      // stream is out audio/video object\n    });\n\n    // immediately on construction of the peer it emits an event called signal we need to listen to that event and send data to the serfver\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"sending-signal\", {\n        userToSignal, // user ID of the people who are already in the room\n        callerID, // our own socket id\n        signal, // sending the signal data\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal: SignalData, callerID: string, stream: MediaStream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"returning-signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function toggleMuteAudio() {\n    // if (stream) {\n    setAudioMuted(!audioMuted);\n    // stream.getAudioTracks()[0].enabled = audioMuted;\n  }\n\n  return (\n    <div>\n      {/* <Avatar\n        alt=\"Remy Sharp\"\n        src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n        style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n      ></Avatar> */}\n      <div style={{ display: \"flex\" }}>\n        <video\n          muted\n          //@ts-ignore\n          ref={userVideo}\n          autoPlay\n          playsInline\n          style={{ width: \"100px\", height: \"100px\" }}\n        />\n        {peers.map((peer, index) => {\n          return <Video key={index} peer={peer} muted={false} />;\n        })}\n      </div>\n      <Button\n        onClick={() => {\n          toggleMuteAudio();\n        }}\n      >\n        Mute\n      </Button>\n    </div>\n  );\n};\n\nexport const RoomII = ({ params }: { params: string }) => {\n  console.log(params);\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n      </div>\n    </>\n  );\n};\n\n// export default RoomII;\n\nexport default Room;\n","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\InputOutputFile\\InputOutputFile.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\Editor\\MonacoAdapter.js",[],["110","111"],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\TextChat\\index.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\TextChat\\ChatMessage.jsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\TextChat\\ChatMessage-styles.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\QuestionsPane\\Tabs.tsx",["112"],"import React, { useState } from \"react\";\nimport { Tabs, Tab, TabPanel, TabList } from \"react-tabs\";\nimport \"react-tabs/style/react-tabs.css\";\nimport \"./ReactTabs.css\";\nimport Settings from \"./Settings\";\nimport parse from \"html-react-parser\";\nimport styles from \"./Tabs.module.css\";\nimport Chip from \"@material-ui/core/Chip\";\nexport default function TabsComponent() {\n  const [tabIndex, setTabIndex] = useState(2);\n\n  const question =\n    '<div class=\"content__u3I1 question-content__JfgR\"><div><p>You are given an array <code>prices</code> for which the <code>i<sup>th</sup></code> element is the price of a given stock on day <code>i</code>.</p>\\n<p>Find the maximum profit you can achieve. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times).</p>\\n<p><strong>Note:</strong> You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).</p>\\n<p> </p>\\n<p><strong>Example 1:</strong></p>\\n<pre><strong>Input:</strong> prices = [7,1,5,3,6,4]\\n<strong>Output:</strong> 7\\n<strong>Explanation:</strong> Buy on day 2 (price = 1) and sell on day 3 (price = 5), profit = 5-1 = 4.\\nThen buy on day 4 (price = 3) and sell on day 5 (price = 6), profit = 6-3 = 3.\\n</pre>\\n<p><strong>Example 2:</strong></p>\\n<pre><strong>Input:</strong> prices = [1,2,3,4,5]\\n<strong>Output:</strong> 4\\n<strong>Explanation:</strong> Buy on day 1 (price = 1) and sell on day 5 (price = 5), profit = 5-1 = 4.\\nNote that you cannot buy on day 1, buy on day 2 and sell them later, as you are engaging multiple transactions at the same time. You must sell before buying again.\\n</pre>\\n<p><strong>Example 3:</strong></p>\\n<pre><strong>Input:</strong> prices = [7,6,4,3,1]\\n<strong>Output:</strong> 0\\n<strong>Explanation:</strong> In this case, no transaction is done, i.e., max profit = 0.\\n</pre>\\n<p> </p>\\n<p><strong>Constraints:</strong></p>\\n<ul>\\n<li><code>1 &lt;= prices.length &lt;= 3 * 10<sup>4</sup></code></li>\\n<li><code>0 &lt;= prices[i] &lt;= 10<sup>4</sup></code></li>\\n</ul>\\n</div></div>';\n\n  const tags = [\"Dynamic Programming\", \"String\"];\n  return (\n    <Tabs selectedIndex={tabIndex} onSelect={(index) => setTabIndex(index)} className=\"tabs_root\">\n      <TabList style={{ background: \"#252526\" }}>\n        <Tab>Problem</Tab>\n        <Tab>Problem List</Tab>\n        <Tab>Settings</Tab>\n      </TabList>\n\n      <TabPanel className={styles.problem}>\n        <h1>Problem name</h1>\n        {parse(question)}\n        <div className={styles.tags}>\n          {tags.map((tag) => (\n            <Chip label={tag} color=\"primary\" />\n          ))}\n        </div>\n      </TabPanel>\n      <TabPanel>\n        <p>\n          <b>Luigi</b> (<i>Japanese: ルイージ Hepburn: Ruīji, [ɾɯ.iː.dʑi̥]</i>) (\n          <i>English: /luˈiːdʒi/; Italian: [luˈiːdʒi]</i>) is a fictional character featured in video games\n          and related media released by Nintendo. Created by prominent game designer Shigeru Miyamoto, Luigi\n          is portrayed as the slightly younger but taller fraternal twin brother of Nintendo's mascot Mario,\n          and appears in many games throughout the Mario franchise, often as a sidekick to his brother.\n        </p>\n        <p>\n          Source:{\" \"}\n          <a href=\"https://en.wikipedia.org/wiki/Luigi\" target=\"_blank\">\n            Wikipedia\n          </a>\n        </p>\n      </TabPanel>\n      <TabPanel>\n        <Settings />\n      </TabPanel>\n    </Tabs>\n  );\n}\n","C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\component\\QuestionsPane\\Settings.tsx",["113","114"],"C:\\Users\\risha\\Desktop\\ReactJS\\caucus-client\\src\\service\\SettingsContext.tsx",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":43,"column":6,"nodeType":"121","endLine":43,"endColumn":8,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":65,"column":6,"nodeType":"121","endLine":65,"endColumn":8,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":49,"column":6,"nodeType":"121","endLine":49,"endColumn":8,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":33,"column":6,"nodeType":"121","endLine":33,"endColumn":8,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"129","line":100,"column":6,"nodeType":"121","endLine":100,"endColumn":8,"suggestions":"130"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"131","severity":1,"message":"132","line":43,"column":11,"nodeType":"133","endLine":43,"endColumn":73},{"ruleId":"134","severity":1,"message":"135","line":7,"column":10,"nodeType":"136","messageId":"137","endLine":7,"endColumn":13},{"ruleId":"134","severity":1,"message":"138","line":7,"column":15,"nodeType":"136","messageId":"137","endLine":7,"endColumn":21},"no-native-reassign",["139"],"no-negated-in-lhs",["140"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["141"],"React Hook React.useEffect has missing dependencies: 'displayNotification', 'enqueueSnackbar', and 'prepareData'. Either include them or remove the dependency array.",["142"],"React Hook useEffect has missing dependencies: 'MonacoEditorRef', 'code', and 'username'. Either include them or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'peer'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has missing dependencies: 'roomID' and 'stream'. Either include them or remove the dependency array.",["145"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","@typescript-eslint/no-unused-vars","'age' is assigned a value but never used.","Identifier","unusedVar","'setAge' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [saveUserInfo]",{"range":"156","text":"157"},"Update the dependencies array to be: [displayNotification, enqueueSnackbar, prepareData]",{"range":"158","text":"159"},"Update the dependencies array to be: [MonacoEditorRef, code, username]",{"range":"160","text":"161"},"Update the dependencies array to be: [peer]",{"range":"162","text":"163"},"Update the dependencies array to be: [roomID, stream]",{"range":"164","text":"165"},[1542,1544],"[saveUserInfo]",[2576,2578],"[displayNotification, enqueueSnackbar, prepareData]",[1947,1949],"[MonacoEditorRef, code, username]",[747,749],"[peer]",[2830,2832],"[roomID, stream]"]