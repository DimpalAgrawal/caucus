[{"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx":"1","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx":"2","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts":"3","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile.tsx":"4","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\config.ts":"5","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\socket.ts":"6","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\ProtectedRoute.tsx":"7","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\GuestNameContext.tsx":"8","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Tooltip.tsx":"9","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Particles.config.tsx":"10","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\UserContext.tsx":"11","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\LoginRoute.tsx":"12","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\store.ts":"13","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\slices\\AppDataSlice.ts":"14","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Loader\\Loader.tsx":"15","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Login.tsx":"16","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Room\\Room.tsx":"17","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\NavigateRooms\\NavigateRooms.tsx":"18","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\index.tsx":"19","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage.jsx":"20","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage-styles.ts":"21","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\VoiceChat\\VoiceChat.tsx":"22","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoEditor.tsx":"23","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoAdapter.js":"24"},{"size":620,"mtime":1613574994921,"results":"25","hashOfConfig":"26"},{"size":2340,"mtime":1613935783940,"results":"27","hashOfConfig":"26"},{"size":425,"mtime":499162500000,"results":"28","hashOfConfig":"26"},{"size":3604,"mtime":1613654735920,"results":"29","hashOfConfig":"26"},{"size":476,"mtime":1614013069809,"results":"30","hashOfConfig":"26"},{"size":108,"mtime":1613045020011,"results":"31","hashOfConfig":"26"},{"size":820,"mtime":1613670561628,"results":"32","hashOfConfig":"26"},{"size":582,"mtime":1613547555529,"results":"33","hashOfConfig":"26"},{"size":698,"mtime":1613550945244,"results":"34","hashOfConfig":"26"},{"size":1429,"mtime":1613554289393,"results":"35","hashOfConfig":"26"},{"size":764,"mtime":1613595485104,"results":"36","hashOfConfig":"26"},{"size":669,"mtime":1613670568446,"results":"37","hashOfConfig":"26"},{"size":214,"mtime":1613575105917,"results":"38","hashOfConfig":"26"},{"size":1249,"mtime":1613575087291,"results":"39","hashOfConfig":"26"},{"size":3113,"mtime":1613650953762,"results":"40","hashOfConfig":"26"},{"size":4353,"mtime":1613716113313,"results":"41","hashOfConfig":"26"},{"size":5747,"mtime":1614026210857,"results":"42","hashOfConfig":"26"},{"size":2685,"mtime":1613919649067,"results":"43","hashOfConfig":"26"},{"size":4324,"mtime":1613554263239,"results":"44","hashOfConfig":"26"},{"size":2677,"mtime":1613654435662,"results":"45","hashOfConfig":"26"},{"size":1359,"mtime":1613554202950,"results":"46","hashOfConfig":"26"},{"size":6025,"mtime":1614011673429,"results":"47","hashOfConfig":"26"},{"size":1642,"mtime":1614025317930,"results":"48","hashOfConfig":"26"},{"size":4666,"mtime":1614025937756,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"e6dgv0",{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"52"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"52"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx",[],["103","104"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx",["105"],"import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport LoginPage from \"./pages/Login/Login\";\nimport ProtectedRoute from \"service/ProtectedRoute\";\nimport LoginRoute from \"service/LoginRoute\";\nimport Dashboard from \"pages/Room/Room\";\nimport NavigateRoom from \"pages/NavigateRooms/NavigateRooms\";\nimport GuestNameProvider, { GuestNameContext } from \"./service/GuestNameContext\";\nimport UserContextProvider, { UserContext } from \"service/UserContext\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { GuestNameContextTypes, OauthResponse, UserContextTypes } from \"types\";\n// import { v1 as uuid } from 'uuid';\nimport Loader from \"pages/Loader/Loader\";\nimport { OAUTH_CHECK } from \"config\";\nexport const isAuthenticated = async (name: string) => {\n  const { data }: AxiosResponse<OauthResponse> = await axios({\n    method: \"GET\",\n    url: OAUTH_CHECK,\n    responseType: \"json\",\n    withCredentials: true,\n  });\n  // if you have logged in as a guest or you have signed in\n  return {\n    isLoggedIn: data.isLoggedIn || name ? true : false,\n    data,\n  };\n};\n\nconst App = () => {\n  const { name } = useContext(GuestNameContext) as GuestNameContextTypes;\n  const { user, saveUserInfo } = useContext(UserContext) as UserContextTypes;\n  useEffect(() => {\n    async function isAuthenticatedWrapper() {\n      const { isLoggedIn, data } = await isAuthenticated(name);\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(data.isLoggedIn));\n      saveUserInfo(data, isLoggedIn);\n      if (!isLoggedIn) {\n        return <Redirect to=\"/\"></Redirect>;\n      }\n    }\n    isAuthenticatedWrapper();\n  }, []);\n\n  return (\n    <div style={{ height: \"auto\" }}>\n      <Router>\n        <Switch>\n          <Route path=\"/room/:id\" component={Dashboard} />\n          <ProtectedRoute user={user} path=\"/home\" NavigationRoom={NavigateRoom} />\n          <LoginRoute exact path=\"/\" component={LoginPage} user={user} />\n          <Route exact path=\"/loader\" component={Loader} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nconst contextWrappedApp = () => {\n  return (\n    <UserContextProvider>\n      <GuestNameProvider>\n        <App />\n      </GuestNameProvider>\n    </UserContextProvider>\n  );\n};\n\nexport default contextWrappedApp;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\config.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\socket.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\ProtectedRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\GuestNameContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Tooltip.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Particles.config.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\UserContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\LoginRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\store.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\slices\\AppDataSlice.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Loader\\Loader.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Room\\Room.tsx",["106"],"import React, { useState, createRef, useRef } from \"react\";\nimport InputOutputFile from \"component/InputOutputFile\";\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\nimport \"react-reflex/styles.css\";\nimport \"./Room.css\";\nimport { socket } from \"service/socket\";\nimport { useSnackbar } from \"notistack\";\nimport ChatApp from \"component/TextChat\";\nimport VoiceChat from \"component/VoiceChat/VoiceChat\";\nimport { SnackbarProvider } from \"notistack\";\nimport { useParams } from \"react-router-dom\";\nimport MonacoEditor from \"component/Editor/MonacoEditor\";\n\nconst Dashboard = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { id } = useParams<Record<string, string>>();\n\n  React.useEffect(() => {\n    const displayNotification = ({ name, isConnected }: Record<string, unknown>) => {\n      const text = isConnected ? \"connected\" : \"disconnected\";\n      const variantStyle = isConnected ? \"success\" : \"error\";\n      enqueueSnackbar(`${name} is ${text}`, {\n        variant: variantStyle,\n      });\n    };\n    socket.on(\"connected\", (data: Record<string, unknown>) => {\n      displayNotification(data);\n      console.log(`I'm Connected with the backend ${data}`);\n    });\n    socket.on(\"disconnected\", (data: Record<string, unknown>) => {\n      displayNotification(data);\n      console.log(`I'm Connected with the backend ${JSON.stringify(data)}`);\n    });\n  }, []);\n\n  const [code, setCode] = useState<string>();\n  const MonacoEditorRef = useRef<any>();\n  const TextAreaRef = createRef<HTMLDivElement>();\n  const [rows, setRows] = useState(4);\n  const resetEditorLayout = () => {\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\n    const adjustedRows = height > 340 ? height / 27 : height / 45;\n    setRows(Math.floor(adjustedRows));\n\n    // if (AceEditorRef.current) AceEditorRef.current.editor!.resize();\n    // @ts-ignores\n    // if (MonacoEditorRef.current) {\n    // console.log(\"hey\" + MonacoEditorRef);\n    MonacoEditorRef.current.layout();\n    // }\n  };\n\n  return (\n    <div className=\"root\">\n      <ReflexContainer orientation=\"horizontal\">\n        <ReflexElement className=\"header\" flex={0.05}>\n          Hey\n        </ReflexElement>\n        <ReflexElement>\n          <ReflexContainer orientation=\"vertical\">\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement className=\"pane-color\">\n                  <div className=\"pane-content\">\n                    <label style={{ height: \"0%\" }}>\n                      Left Pane <br /> Top\n                      <br />\n                      (splitter propagation)\n                    </label>\n                  </div>\n                </ReflexElement>\n                <ReflexSplitter className=\"splitter splitter-horizontal\" propagate={true} />\n                <ReflexElement className=\"pane-color\">\n                  <div>\n                    <label style={{ height: \"0%\" }}>\n                      Left Pane <br /> Middle\n                      <br />\n                      (splitter propagation)\n                    </label>\n                  </div>\n                </ReflexElement>\n                <ReflexSplitter className=\"splitter splitter-horizontal\" propagate={true} />\n                <ReflexElement className=\"pane-color\">\n                  <label style={{ height: \"0%\" }}>\n                    Left Pane <br /> Bottom\n                    <br />\n                    (splitter propagation)\n                  </label>\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* 1st content */}\n            <ReflexSplitter className=\"splitter splitter-verticle\" onStopResize={() => resetEditorLayout()} />\n            <ReflexElement flex={0.5}>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement style={{ display: \"flex\" }}>\n                  {/* <CodeEditor\n                    text={text}\n                    setText={setText}\n                    AceEditorRef={AceEditorRef}\n                  /> */}\n                  <MonacoEditor code={code} setCode={setCode} MonacoEditorRef={MonacoEditorRef} />\n                </ReflexElement>\n                <ReflexSplitter\n                  className=\"splitter splitter-horizontal\"\n                  onStopResize={() => resetEditorLayout()}\n                />\n                <ReflexElement flex={0.3}>\n                  <InputOutputFile rows={rows} TextAreaRef={TextAreaRef} />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* 3rd content */}\n            <ReflexSplitter className=\"splitter splitter-verticle\" onStopResize={() => resetEditorLayout()} />\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement className=\"pane-color\" flex={0.3}>\n                  <h2>Video Icons</h2>\n                  <VoiceChat params={id} />\n                </ReflexElement>\n                <ReflexSplitter className=\"splitter splitter-horizontal\" />\n                <ReflexElement className=\"chat-app\">\n                  {/* Chat App Component */}\n                  <ChatApp />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n          </ReflexContainer>\n        </ReflexElement>\n        <ReflexElement className=\"footer\" flex={0.05}>\n          <div className=\"pane-content\">\n            <label>Footer (fixed)</label>\n          </div>\n        </ReflexElement>\n      </ReflexContainer>\n    </div>\n  );\n};\n\nexport const NotificationWrappedDashBoard = () => {\n  return (\n    <SnackbarProvider>\n      <Dashboard />\n    </SnackbarProvider>\n  );\n};\n\nexport default NotificationWrappedDashBoard;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\NavigateRooms\\NavigateRooms.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\index.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage.jsx",[],["107","108"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage-styles.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\VoiceChat\\VoiceChat.tsx",["109","110","111"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Peer, { Instance, SignalData } from \"simple-peer\";\nimport { socket } from \"service/socket\";\nimport { Avatar, Button } from \"@material-ui/core\";\n\ninterface MediaSrcType {\n  srcObject: MediaStream;\n}\ninterface PeerRefType {\n  peerID: string;\n  peer: Instance;\n}\n\ninterface UserJoinedPayload {\n  signal: SignalData;\n  callerID: string;\n  stream: MediaStream;\n}\n\ninterface ReturnSignalPayload {\n  signal: SignalData;\n  id: string;\n}\n\nconst Video = ({ peer, muted }: { peer: Instance; muted: boolean }) => {\n  const ref = useRef({} as MediaSrcType);\n\n  useEffect(() => {\n    peer.on(\"stream\", (stream: MediaStream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  console.log(ref);\n  return (\n    <video\n      muted={muted}\n      playsInline\n      autoPlay\n      //@ts-ignore\n      ref={ref}\n      style={{ width: \"150px\", height: \"150px\" }}\n    />\n  );\n};\n\nexport const Room = ({ params }: { params: string }) => {\n  const [peers, setPeers] = useState<Instance[]>([]);\n  const userAudio = useRef({} as MediaSrcType);\n  const [stream, setStream] = useState<MediaStream>();\n  const peersRef = useRef([] as PeerRefType[]);\n  const [audioMuted, setAudioMuted] = useState(false);\n  const roomID = params;\n\n  useEffect(() => {\n    navigator.mediaDevices\n      .getUserMedia({ video: false, audio: true })\n      .then((stream) => {\n        userAudio.current.srcObject = stream;\n        setStream(stream);\n\n        // okay we are joining a room with the given room id huh\n        socket.emit(\"join-room\", roomID);\n        // fetching all the users from the socker io server\n        socket.on(\"all-users\", (users: string[]) => {\n          console.log(users);\n          const peers: Instance[] = [];\n          // looping thorugh all the users we got we want to create a new peer for them -- because peer meshes\n          users.forEach((userID) => {\n            const peer = createPeer(userID, socket.id, stream);\n            peersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n            peers.push(peer);\n          });\n          setPeers(peers);\n        });\n\n        socket.on(\"user-joined\", (payload: UserJoinedPayload) => {\n          /**\n           * @signal - this is the incomming signalz\n           * @calledID - is the id of the user which is calling us\n           * @stream - this is basically our own stream of data\n           *  */\n          const peer = addPeer(payload.signal, payload.callerID, stream);\n          peersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n\n          setPeers((users) => [...users, peer]);\n        });\n\n        socket.on(\n          \"receiving-returned-signal\",\n          (payload: ReturnSignalPayload) => {\n            const item = peersRef.current.find((p) => p.peerID === payload.id);\n            if (item) item.peer.signal(payload.signal);\n          }\n        );\n      });\n  }, []);\n\n  /**\n   * @userToSignal - socekt_id of the person who is already in the room (person being called)\n   * @calledID - SID of person who just joined, caller\n   * @stream - stream<audio,video> data of the person who is calling(caller)\n   *  */\n  function createPeer(\n    userToSignal: string,\n    callerID: string,\n    stream: MediaStream\n  ) {\n    const peer = new Peer({\n      // true if this is the peer initiating the connection -- immediately on construction the peer emits the signal\n      initiator: true,\n      trickle: false,\n      stream,\n      // stream is out audio/video object\n    });\n\n    // immediately on construction of the peer it emits an event called signal we need to listen to that event and send data to the serfver\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"sending-signal\", {\n        userToSignal, // user ID of the people who are already in the room\n        callerID, // our own socket id\n        signal, // sending the signal data\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(\n    incomingSignal: SignalData,\n    callerID: string,\n    stream: MediaStream\n  ) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"returning-signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function toggleMuteAudio() {\n    // if (stream) {\n    setAudioMuted(!audioMuted);\n    // stream.getAudioTracks()[0].enabled = audioMuted;\n  }\n\n  return (\n    <div>\n      {/* <Avatar\n        alt=\"Remy Sharp\"\n        src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n        style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n      ></Avatar> */}\n      <div style={{ display: \"flex\" }}>\n        <video\n          muted\n          //@ts-ignore\n          ref={userAudio}\n          autoPlay\n          playsInline\n          style={{ width: \"30px\", height: \"30px\" }}\n        />\n        {peers.map((peer, index) => {\n          return <Video key={index} peer={peer} muted={false} />;\n        })}\n      </div>\n      <Button\n        onClick={() => {\n          toggleMuteAudio();\n        }}\n      >\n        Mute\n      </Button>\n    </div>\n  );\n};\n\nexport const RoomII = ({ params }: { params: string }) => {\n  console.log(params);\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n      </div>\n    </>\n  );\n};\n\n// export default RoomII;\n\nexport default Room;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoEditor.tsx",["112"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoAdapter.js",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":42,"column":6,"nodeType":"119","endLine":42,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":35,"column":6,"nodeType":"119","endLine":35,"endColumn":8,"suggestions":"122"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"123","line":32,"column":6,"nodeType":"119","endLine":32,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":49,"column":10,"nodeType":"127","messageId":"128","endLine":49,"endColumn":16},{"ruleId":"117","severity":1,"message":"129","line":102,"column":6,"nodeType":"119","endLine":102,"endColumn":8,"suggestions":"130"},{"ruleId":"117","severity":1,"message":"131","line":38,"column":6,"nodeType":"119","endLine":38,"endColumn":8,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'name' and 'saveUserInfo'. Either include them or remove the dependency array.","ArrayExpression",["135"],"React Hook React.useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["136"],"React Hook useEffect has a missing dependency: 'peer'. Either include it or remove the dependency array.",["137"],"@typescript-eslint/no-unused-vars","'stream' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["138"],"React Hook useEffect has missing dependencies: 'MonacoEditorRef' and 'code'. Either include them or remove the dependency array.",["139"],"no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},"Update the dependencies array to be: [name, saveUserInfo]",{"range":"150","text":"151"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"152","text":"153"},"Update the dependencies array to be: [peer]",{"range":"154","text":"155"},"Update the dependencies array to be: [roomID]",{"range":"156","text":"157"},"Update the dependencies array to be: [MonacoEditorRef, code]",{"range":"158","text":"159"},[1683,1685],"[name, saveUserInfo]",[1395,1397],"[enqueueSnackbar]",[733,735],"[peer]",[2967,2969],"[roomID]",[1277,1279],"[MonacoEditorRef, code]"]