[{"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx":"1","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx":"2","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts":"3","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\config.ts":"4","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\socket.ts":"5","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\ProtectedRoute.tsx":"6","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\GuestNameContext.tsx":"7","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\UserContext.tsx":"8","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\LoginRoute.tsx":"9","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\store.ts":"10","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\slices\\AppDataSlice.ts":"11","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Loader\\Loader.tsx":"12","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Login.tsx":"13","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Room\\Room.tsx":"14","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\NavigateRooms\\NavigateRooms.tsx":"15","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\index.tsx":"16","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage.jsx":"17","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage-styles.ts":"18","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\VoiceChat\\VoiceChat.tsx":"19","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoEditor.tsx":"20","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoAdapter.js":"21","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Particles.config.tsx":"22","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile\\InputOutputFile.tsx":"23"},{"size":620,"mtime":1614063904974,"results":"24","hashOfConfig":"25"},{"size":2095,"mtime":1614067989155,"results":"26","hashOfConfig":"25"},{"size":425,"mtime":1614063904490,"results":"27","hashOfConfig":"25"},{"size":411,"mtime":1614062800270,"results":"28","hashOfConfig":"25"},{"size":111,"mtime":1614063904510,"results":"29","hashOfConfig":"25"},{"size":788,"mtime":1614063905475,"results":"30","hashOfConfig":"25"},{"size":979,"mtime":1614074757923,"results":"31","hashOfConfig":"25"},{"size":842,"mtime":1614060429347,"results":"32","hashOfConfig":"25"},{"size":624,"mtime":1614063640790,"results":"33","hashOfConfig":"25"},{"size":213,"mtime":1614063904458,"results":"34","hashOfConfig":"25"},{"size":1250,"mtime":1614063904448,"results":"35","hashOfConfig":"25"},{"size":5355,"mtime":1614072443573,"results":"36","hashOfConfig":"25"},{"size":4595,"mtime":1614068015571,"results":"37","hashOfConfig":"25"},{"size":6014,"mtime":1614069476907,"results":"38","hashOfConfig":"25"},{"size":2790,"mtime":1614062791345,"results":"39","hashOfConfig":"25"},{"size":4155,"mtime":1614063904836,"results":"40","hashOfConfig":"25"},{"size":2677,"mtime":1613654435662,"results":"41","hashOfConfig":"25"},{"size":1360,"mtime":1614063904362,"results":"42","hashOfConfig":"25"},{"size":5871,"mtime":1614055804082,"results":"43","hashOfConfig":"25"},{"size":2114,"mtime":1614074721821,"results":"44","hashOfConfig":"25"},{"size":4771,"mtime":1614033352843,"results":"45","hashOfConfig":"25"},{"size":1429,"mtime":1614063905223,"results":"46","hashOfConfig":"25"},{"size":3634,"mtime":1614070052816,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"e6dgv0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx",[],["98","99"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx",["100"],"import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport LoginPage from \"./pages/Login/Login\";\nimport ProtectedRoute from \"service/ProtectedRoute\";\nimport LoginRoute from \"service/LoginRoute\";\nimport Dashboard from \"pages/Room/Room\";\nimport Loader from \"pages/Loader/Loader\";\nimport NavigateRoom from \"pages/NavigateRooms/NavigateRooms\";\nimport GuestNameProvider from \"./service/GuestNameContext\";\nimport UserContextProvider, { UserContext } from \"service/UserContext\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { OauthResponse, UserContextTypes } from \"types\";\nimport { OAUTH_CHECK } from \"config\";\n\nexport const isAuthenticated = async () => {\n  const { data }: AxiosResponse<OauthResponse> = await axios({\n    method: \"GET\",\n    url: OAUTH_CHECK,\n    responseType: \"json\",\n    withCredentials: true,\n  });\n  return {\n    isLoggedIn: data.isLoggedIn,\n    data,\n  };\n};\n\nconst App = () => {\n  const { user, saveUserInfo } = useContext(UserContext) as UserContextTypes;\n  useEffect(() => {\n    async function isAuthenticatedWrapper() {\n      const { isLoggedIn, data } = await isAuthenticated();\n\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(data.isLoggedIn));\n      saveUserInfo(data, isLoggedIn);\n      if (isLoggedIn === false) {\n        return <Redirect to=\"/\"></Redirect>;\n      }\n    }\n    isAuthenticatedWrapper();\n  }, []);\n\n  return (\n    <div style={{ height: \"auto\" }}>\n      <Router>\n        <Switch>\n          <Route path=\"/loader\" component={Loader} />\n          <Route path=\"/room/:id\" component={Dashboard} />\n          <ProtectedRoute exact user={user} path=\"/home\" NavigationRoom={NavigateRoom} />\n          <LoginRoute exact path=\"/\" component={LoginPage} user={user} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nconst contextWrappedApp = () => {\n  return (\n    <UserContextProvider>\n      <GuestNameProvider>\n        <App />\n      </GuestNameProvider>\n    </UserContextProvider>\n  );\n};\n\nexport default contextWrappedApp;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\config.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\socket.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\ProtectedRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\GuestNameContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\UserContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\LoginRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\store.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\slices\\AppDataSlice.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Loader\\Loader.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Room\\Room.tsx",["101"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\NavigateRooms\\NavigateRooms.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\index.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage.jsx",[],["102","103"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage-styles.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\VoiceChat\\VoiceChat.tsx",["104","105","106"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Peer, { Instance, SignalData } from \"simple-peer\";\nimport { socket } from \"service/socket\";\nimport { Avatar, Button } from \"@material-ui/core\";\n\ninterface MediaSrcType {\n  srcObject: MediaStream;\n}\ninterface PeerRefType {\n  peerID: string;\n  peer: Instance;\n}\n\ninterface UserJoinedPayload {\n  signal: SignalData;\n  callerID: string;\n  stream: MediaStream;\n}\n\ninterface ReturnSignalPayload {\n  signal: SignalData;\n  id: string;\n}\n\nconst Video = ({ peer, muted }: { peer: Instance; muted: boolean }) => {\n  const ref = useRef({} as MediaSrcType);\n\n  useEffect(() => {\n    peer.on(\"stream\", (stream: MediaStream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  console.log(ref);\n  return (\n    <video\n      muted={muted}\n      playsInline\n      autoPlay\n      //@ts-ignore\n      ref={ref}\n      style={{ width: \"150px\", height: \"150px\" }}\n    />\n  );\n};\n\nexport const Room = ({ params }: { params: string }) => {\n  const [peers, setPeers] = useState<Instance[]>([]);\n  const userAudio = useRef({} as MediaSrcType);\n  const [stream, setStream] = useState<MediaStream>();\n  const peersRef = useRef([] as PeerRefType[]);\n  const [audioMuted, setAudioMuted] = useState(false);\n  const roomID = params;\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then((stream) => {\n      userAudio.current.srcObject = stream;\n      setStream(stream);\n\n      // okay we are joining a room with the given room id huh\n      socket.emit(\"join-room\", roomID);\n      // fetching all the users from the socker io server\n      socket.on(\"all-users\", (users: string[]) => {\n        console.log(users);\n        const peers: Instance[] = [];\n        // looping thorugh all the users we got we want to create a new peer for them -- because peer meshes\n        users.forEach((userID) => {\n          const peer = createPeer(userID, socket.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer,\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n\n      socket.on(\"user-joined\", (payload: UserJoinedPayload) => {\n        /**\n         * @signal - this is the incomming signalz\n         * @calledID - is the id of the user which is calling us\n         * @stream - this is basically our own stream of data\n         *  */\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n\n        setPeers((users) => [...users, peer]);\n      });\n\n      socket.on(\"receiving-returned-signal\", (payload: ReturnSignalPayload) => {\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\n        if (item) item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  /**\n   * @userToSignal - socekt_id of the person who is already in the room (person being called)\n   * @calledID - SID of person who just joined, caller\n   * @stream - stream<audio,video> data of the person who is calling(caller)\n   *  */\n  function createPeer(userToSignal: string, callerID: string, stream: MediaStream) {\n    const peer = new Peer({\n      // true if this is the peer initiating the connection -- immediately on construction the peer emits the signal\n      initiator: true,\n      trickle: false,\n      stream,\n      // stream is out audio/video object\n    });\n\n    // immediately on construction of the peer it emits an event called signal we need to listen to that event and send data to the serfver\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"sending-signal\", {\n        userToSignal, // user ID of the people who are already in the room\n        callerID, // our own socket id\n        signal, // sending the signal data\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal: SignalData, callerID: string, stream: MediaStream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"returning-signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function toggleMuteAudio() {\n    // if (stream) {\n    setAudioMuted(!audioMuted);\n    // stream.getAudioTracks()[0].enabled = audioMuted;\n  }\n\n  return (\n    <div>\n      {/* <Avatar\n        alt=\"Remy Sharp\"\n        src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n        style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n      ></Avatar> */}\n      <div style={{ display: \"flex\" }}>\n        <video\n          muted\n          //@ts-ignore\n          ref={userAudio}\n          autoPlay\n          playsInline\n          style={{ width: \"400px\", height: \"400px\" }}\n        />\n        {peers.map((peer, index) => {\n          return <Video key={index} peer={peer} muted={false} />;\n        })}\n      </div>\n      <Button\n        onClick={() => {\n          toggleMuteAudio();\n        }}\n      >\n        Mute\n      </Button>\n    </div>\n  );\n};\n\nexport const RoomII = ({ params }: { params: string }) => {\n  console.log(params);\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n      </div>\n    </>\n  );\n};\n\n// export default RoomII;\n\nexport default Room;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoEditor.tsx",["107"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoAdapter.js",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Particles.config.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile\\InputOutputFile.tsx",[],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":41,"column":6,"nodeType":"114","endLine":41,"endColumn":8,"suggestions":"115"},{"ruleId":"112","severity":1,"message":"116","line":36,"column":6,"nodeType":"114","endLine":36,"endColumn":8,"suggestions":"117"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"118","line":32,"column":6,"nodeType":"114","endLine":32,"endColumn":8,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":49,"column":10,"nodeType":"122","messageId":"123","endLine":49,"endColumn":16},{"ruleId":"112","severity":1,"message":"124","line":97,"column":6,"nodeType":"114","endLine":97,"endColumn":8,"suggestions":"125"},{"ruleId":"112","severity":1,"message":"126","line":46,"column":6,"nodeType":"114","endLine":46,"endColumn":8,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["130"],"React Hook React.useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["131"],"React Hook useEffect has a missing dependency: 'peer'. Either include it or remove the dependency array.",["132"],"@typescript-eslint/no-unused-vars","'stream' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has missing dependencies: 'MonacoEditorRef', 'code', and 'username'. Either include them or remove the dependency array.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [saveUserInfo]",{"range":"145","text":"146"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"147","text":"148"},"Update the dependencies array to be: [peer]",{"range":"149","text":"150"},"Update the dependencies array to be: [roomID]",{"range":"151","text":"152"},"Update the dependencies array to be: [MonacoEditorRef, code, username]",{"range":"153","text":"154"},[1438,1440],"[saveUserInfo]",[1532,1534],"[enqueueSnackbar]",[733,735],"[peer]",[2843,2845],"[roomID]",[1776,1778],"[MonacoEditorRef, code, username]"]