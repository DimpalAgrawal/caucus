[{"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx":"1","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx":"2","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\constant.tsx":"3","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts":"4","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login.tsx":"5","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Home.tsx":"6","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\AceEditor.tsx":"7","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile.tsx":"8"},{"size":500,"mtime":1611778995418,"results":"9","hashOfConfig":"10"},{"size":658,"mtime":1612703945527,"results":"11","hashOfConfig":"10"},{"size":32,"mtime":1611957152893,"results":"12","hashOfConfig":"10"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"10"},{"size":6822,"mtime":1612610124093,"results":"14","hashOfConfig":"10"},{"size":4818,"mtime":1612643137731,"results":"15","hashOfConfig":"10"},{"size":2105,"mtime":1612699062357,"results":"16","hashOfConfig":"10"},{"size":2888,"mtime":1612641348110,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"e6dgv0",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx",[],["39","40"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\constant.tsx",[],["41","42"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login.tsx",["43","44","45","46","47"],"import React from 'react';\nimport classes from 'styles/login.module.css';\nimport Particles from 'react-particles-js';\nimport Button from '@material-ui/core/Button';\nimport TouchRipple from '@material-ui/core/ButtonBase/TouchRipple';\n\nimport {\n  GoogleLoginButton,\n  GithubLoginButton,\n  TwitterLoginButton,\n} from 'react-social-login-buttons';\n\nconst LoginII = () => {\n  return (\n    <div className={classes['root']}>\n      <Particles\n        height=\"100vh\"\n        width=\"100vw\"\n        params={{\n          particles: {\n            number: {\n              value: 260,\n              density: {\n                enable: true,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 4,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: 'top',\n              out_mode: 'out',\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: 'bubble',\n              },\n              onclick: {\n                enable: true,\n                mode: 'repulse',\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 50,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <div className={classes['login-box']}>\n        <div className={classes['login-box-formbox']}>\n          <div className={classes['login-box-signup']}>\n            Don't have an account? <a href=\"#\">Sign Up</a>\n          </div>\n          <div className={classes['login-box-login']}>\n            <h1>Welcome to RTCE</h1>\n            <p>\n              <i>A real Time collaborative editor with embeded compiler</i>\n            </p>\n            <form action=\"#\">\n              <div>\n                <label htmlFor=\"username\"> Guest Name</label>\n                <input\n                  type=\"text\"\n                  name=\"username\"\n                  placeholder=\"Enter your Name\"\n                  className={classes['input-email']}\n                />\n              </div>\n              <div>\n                <input\n                  type=\"button\"\n                  defaultValue=\"Login as a Guest\"\n                  className={classes['btn']}\n                />\n              </div>\n            </form>\n            <div className={classes['alternate-text']}>Or Log in with</div>\n\n            {/* <GoogleLoginButton />\n            <GithubLoginButton />\n            <TwitterLoginButton /> */}\n            <div className={classes['alternate-boxes']}>\n              <Button\n                variant=\"outlined\"\n                className={classes['alternate-box']}\n                style={{\n                  border: '1px solid rgba(190, 190, 190, 0.5)',\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className={[\n                    classes['icon'],\n                    classes['icon-tabler'],\n                    classes['icon-tabler-brand-facebook'],\n                  ].join(' ')}\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={2}\n                  stroke=\"white\"\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M17.788 5.108a9 9 0 1 0 3.212 6.892h-8\" />\n                </svg>\n              </Button>\n              <Button\n                variant=\"outlined\"\n                className={classes['alternate-box']}\n                style={{\n                  border: '1px solid rgba(190, 190, 190, 0.5)',\n                }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className={[\n                    classes['icon'],\n                    classes['icon-tabler'],\n                    classes['icon-tabler-brand-facebook'],\n                  ].join(' ')}\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={2}\n                  stroke=\"white\"\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M7 10v4h3v7h4v-7h3l1 -4h-4v-2a1 1 0 0 1 1 -1h3v-4h-3a5 5 0 0 0 -5 5v2h-3\" />\n                </svg>\n              </Button>\n              <Button\n                variant=\"outlined\"\n                style={{\n                  padding: '.75rem',\n                  border: '1px solid rgba(190, 190, 190, 0.5)',\n                }}\n                className={classes['alternate-box']}\n                // style={{ backgroundColor: 'white' }}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  className={[\n                    classes['icon'],\n                    classes['icon-tabler'],\n                    classes['icon-tabler-brand-apple'],\n                  ].join(' ')}\n                  width={24}\n                  height={24}\n                  viewBox=\"0 0 24 24\"\n                  strokeWidth={2}\n                  stroke=\"white\"\n                  fill=\"none\"\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                >\n                  <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  <path d=\"M9 7c-3 0 -4 3 -4 5.5c0 3 2 7.5 4 7.5c1.088 -.046 1.679 -.5 3 -.5c1.312 0 1.5 .5 3 .5s4 -3 4 -5c-.028 -.01 -2.472 -.403 -2.5 -3c-.019 -2.17 2.416 -2.954 2.5 -3c-1.023 -1.492 -2.951 -1.963 -3.5 -2c-1.433 -.111 -2.83 1 -3.5 1c-.68 0 -1.9 -1 -3 -1z\" />\n                  <path d=\"M12 4a2 2 0 0 0 2 -2a2 2 0 0 0 -2 2\" />\n                </svg>\n              </Button>\n            </div>\n          </div>\n        </div>\n        <div className={classes['login-box-quotebox']}>\n          <div className={classes['quote-container']}>\n            <div className={classes['quote']}>Make a Dream.</div>\n            <div className={classes['quote-small']}>\n              'Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem\n              repellendus cumque voluptatum animi, illum veniam?'\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginII;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Home.tsx",["48","49","50","51","52"],"import { Paper, Tabs } from '@material-ui/core';\nimport { Grid, Button, Tab } from '@material-ui/core';\nimport CodeEditor from 'component/AceEditor';\nimport InputOutputFile from 'component/InputOutputFile';\nimport React, { useState, useRef, createRef } from 'react';\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from 'react-reflex';\nimport 'react-reflex/styles.css';\n\nimport './Home.css';\n\nconst Dashboard = () => {\n  const [text, setText] = useState('');\n  const AceEditorRef = useRef(null);\n  const TextAreaRef = createRef<HTMLDivElement>();\n  const [rows, setRows] = useState(4);\n  const resetEditorLayout = () => {\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\n    const adjustedRows = height > 340 ? height / 27 : height / 45;\n    setRows(Math.floor(adjustedRows));\n\n    //@ts-ignores\n    AceEditorRef!.current!.editor!.resize();\n  };\n\n  return (\n    <div className=\"root\">\n      <ReflexContainer orientation=\"horizontal\">\n        <ReflexElement className=\"header\" flex={0.05}>\n          Hey\n        </ReflexElement>\n        <ReflexElement>\n          <ReflexContainer orientation=\"vertical\">\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement className=\"pane-color\">\n                  <div className=\"pane-content\">\n                    <label style={{ height: '0%' }}>\n                      Left Pane <br /> Top\n                      <br />\n                      (splitter propagation)\n                    </label>\n                  </div>\n                </ReflexElement>\n                <ReflexSplitter\n                  className=\"splitter splitter-horizontal\"\n                  propagate={true}\n                />\n                <ReflexElement className=\"pane-color\">\n                  <div>\n                    <label style={{ height: '0%' }}>\n                      Left Pane <br /> Middle\n                      <br />\n                      (splitter propagation)\n                    </label>\n                  </div>\n                </ReflexElement>\n                <ReflexSplitter\n                  className=\"splitter splitter-horizontal\"\n                  propagate={true}\n                />\n                <ReflexElement className=\"pane-color\">\n                  <label style={{ height: '0%' }}>\n                    Left Pane <br /> Bottom\n                    <br />\n                    (splitter propagation)\n                  </label>\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* 1st content */}\n            <ReflexSplitter\n              className=\"splitter splitter-verticle\"\n              onStopResize={() => resetEditorLayout()}\n            />\n            <ReflexElement flex={0.5}>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement style={{ display: 'flex' }}>\n                  <CodeEditor\n                    text={text}\n                    setText={setText}\n                    AceEditorRef={AceEditorRef}\n                  />\n                </ReflexElement>\n                <ReflexSplitter\n                  className=\"splitter splitter-horizontal\"\n                  onStopResize={() => resetEditorLayout()}\n                />\n                <ReflexElement flex={0.3}>\n                  <InputOutputFile rows={rows} TextAreaRef={TextAreaRef} />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* 3rd content */}\n            <ReflexSplitter\n              className=\"splitter splitter-verticle\"\n              onStopResize={() => resetEditorLayout()}\n            />\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement>\n                  <ReflexContainer orientation=\"vertical\">\n                    <ReflexElement className=\"pane-color\">\n                      <h2>Input</h2>\n                    </ReflexElement>\n                    <ReflexSplitter className=\"splitter splitter-verticle\" />\n                    <ReflexElement className=\"pane-color\">\n                      <h2>Output</h2>\n                    </ReflexElement>\n                  </ReflexContainer>\n                </ReflexElement>\n                <ReflexSplitter className=\"splitter splitter-horizontal\" />\n                <ReflexElement className=\"chat-app\">\n                  <h2>Chat Pane Bottom</h2>\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n          </ReflexContainer>\n        </ReflexElement>\n        <ReflexElement className=\"footer\" flex={0.05}>\n          <div className=\"pane-content\">\n            <label>Footer (fixed)</label>\n          </div>\n        </ReflexElement>\n      </ReflexContainer>\n    </div>\n  );\n};\nexport default Dashboard;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\AceEditor.tsx",["53","54","55","56"],"import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/ext-language_tools';\nimport 'ace-builds/src-min-noconflict/ext-searchbox';\nimport 'ace-builds/src-min-noconflict/ext-statusbar';\nimport 'ace-builds/src-noconflict/ext-themelist';\n\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/src-noconflict/mode-c_cpp';\nimport 'ace-builds/src-noconflict/theme-monokai';\nimport 'ace-builds/src-noconflict/keybinding-vim';\nimport Select from 'react-select';\n\nconst languages = ['c_cpp', 'java', 'python', 'typescript', 'golang'];\n\nconst langaugeOptions = [\n  { value: 'c_cpp', label: 'C++' },\n  { value: 'python', label: 'Python' },\n  { value: 'java', label: 'Java' },\n  { value: 'typescript', label: 'Typescript' },\n  { value: 'golang', label: 'GO' },\n];\n\nconst theme = ['moonkai', 'light'];\n\n// let text =\n//   '{\\n  \"id\": 0,\\n  ' +\n//   '\"script\": \"\"\"\\n   function add(x, y) {\\n      return x + y;\\n   }\\n   add(1, 2);\\n   \"\"\"' +\n//   ',\\n   \"descr\": \"add two numbers\"\\n}';\n\ninterface AppProps {\n  text: string;\n  setText: React.Dispatch<React.SetStateAction<string>>;\n  AceEditorRef: React.MutableRefObject<any>;\n}\n\nconst CodeEditor: React.FC<AppProps> = ({ text, setText, AceEditorRef }) => {\n  return (\n    <AceEditor\n      style={{ flexGrow: 1 }}\n      ref={AceEditorRef}\n      // maxLines={Infinity}\n      // width=\"100%\"\n      height=\"100%\"\n      placeholder=\"Enter Code\"\n      mode=\"c_cpp\"\n      theme=\"monokai\"\n      name=\"Ace-Editor-Instance\"\n      onChange={(code: string) => setText(code)}\n      fontSize={16}\n      showPrintMargin={true}\n      showGutter={true}\n      keyboardHandler=\"vim\"\n      highlightActiveLine={true}\n      value={text}\n      setOptions={{\n        showPrintMargin: false,\n        enableBasicAutocompletion: true,\n        enableLiveAutocompletion: true,\n        wrap: true,\n        fontSize: '16px',\n        wrapBehavioursEnabled: true,\n        enableSnippets: true,\n        showLineNumbers: true,\n        tabSize: 2,\n      }}\n    />\n  );\n};\nexport default CodeEditor;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile.tsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"57","replacedBy":"61"},{"ruleId":"59","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":5,"column":8,"nodeType":"65","messageId":"66","endLine":5,"endColumn":19},{"ruleId":"63","severity":1,"message":"67","line":8,"column":3,"nodeType":"65","messageId":"66","endLine":8,"endColumn":20},{"ruleId":"63","severity":1,"message":"68","line":9,"column":3,"nodeType":"65","messageId":"66","endLine":9,"endColumn":20},{"ruleId":"63","severity":1,"message":"69","line":10,"column":3,"nodeType":"65","messageId":"66","endLine":10,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":74,"column":36,"nodeType":"72","endLine":74,"endColumn":48},{"ruleId":"63","severity":1,"message":"73","line":1,"column":10,"nodeType":"65","messageId":"66","endLine":1,"endColumn":15},{"ruleId":"63","severity":1,"message":"74","line":1,"column":17,"nodeType":"65","messageId":"66","endLine":1,"endColumn":21},{"ruleId":"63","severity":1,"message":"75","line":2,"column":10,"nodeType":"65","messageId":"66","endLine":2,"endColumn":14},{"ruleId":"63","severity":1,"message":"76","line":2,"column":16,"nodeType":"65","messageId":"66","endLine":2,"endColumn":22},{"ruleId":"63","severity":1,"message":"77","line":2,"column":24,"nodeType":"65","messageId":"66","endLine":2,"endColumn":27},{"ruleId":"63","severity":1,"message":"78","line":14,"column":8,"nodeType":"65","messageId":"66","endLine":14,"endColumn":14},{"ruleId":"63","severity":1,"message":"79","line":16,"column":7,"nodeType":"65","messageId":"66","endLine":16,"endColumn":16},{"ruleId":"63","severity":1,"message":"80","line":18,"column":7,"nodeType":"65","messageId":"66","endLine":18,"endColumn":22},{"ruleId":"63","severity":1,"message":"81","line":26,"column":7,"nodeType":"65","messageId":"66","endLine":26,"endColumn":12},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],["82"],["83"],"@typescript-eslint/no-unused-vars","'TouchRipple' is defined but never used.","Identifier","unusedVar","'GoogleLoginButton' is defined but never used.","'GithubLoginButton' is defined but never used.","'TwitterLoginButton' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Paper' is defined but never used.","'Tabs' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'Tab' is defined but never used.","'Select' is defined but never used.","'languages' is assigned a value but never used.","'langaugeOptions' is assigned a value but never used.","'theme' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]