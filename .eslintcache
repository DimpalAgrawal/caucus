[{"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx":"1","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx":"2","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts":"3","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\config.ts":"4","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\socket.ts":"5","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\ProtectedRoute.tsx":"6","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\GuestNameContext.tsx":"7","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\UserContext.tsx":"8","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\LoginRoute.tsx":"9","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\store.ts":"10","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\slices\\AppDataSlice.ts":"11","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Loader\\Loader.tsx":"12","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Login.tsx":"13","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Room\\Room.tsx":"14","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\NavigateRooms\\NavigateRooms.tsx":"15","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\index.tsx":"16","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage.jsx":"17","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage-styles.ts":"18","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\VoiceChat\\VoiceChat.tsx":"19","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoEditor.tsx":"20","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoAdapter.js":"21","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Particles.config.tsx":"22","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile\\InputOutputFile.tsx":"23"},{"size":620,"mtime":1614063904974,"results":"24","hashOfConfig":"25"},{"size":2095,"mtime":1614067989155,"results":"26","hashOfConfig":"25"},{"size":425,"mtime":1614063904490,"results":"27","hashOfConfig":"25"},{"size":411,"mtime":1614062800270,"results":"28","hashOfConfig":"25"},{"size":111,"mtime":1614063904510,"results":"29","hashOfConfig":"25"},{"size":788,"mtime":1614063905475,"results":"30","hashOfConfig":"25"},{"size":927,"mtime":1614063452277,"results":"31","hashOfConfig":"25"},{"size":842,"mtime":1614060429347,"results":"32","hashOfConfig":"25"},{"size":624,"mtime":1614063640790,"results":"33","hashOfConfig":"25"},{"size":213,"mtime":1614063904458,"results":"34","hashOfConfig":"25"},{"size":1250,"mtime":1614063904448,"results":"35","hashOfConfig":"25"},{"size":5348,"mtime":1614068008134,"results":"36","hashOfConfig":"25"},{"size":4595,"mtime":1614068015571,"results":"37","hashOfConfig":"25"},{"size":5920,"mtime":1614064583385,"results":"38","hashOfConfig":"25"},{"size":2790,"mtime":1614062791345,"results":"39","hashOfConfig":"25"},{"size":4155,"mtime":1614063904836,"results":"40","hashOfConfig":"25"},{"size":2677,"mtime":1613654435662,"results":"41","hashOfConfig":"25"},{"size":1360,"mtime":1614063904362,"results":"42","hashOfConfig":"25"},{"size":5871,"mtime":1614055804082,"results":"43","hashOfConfig":"25"},{"size":2205,"mtime":1614063567757,"results":"44","hashOfConfig":"25"},{"size":4771,"mtime":1614033352843,"results":"45","hashOfConfig":"25"},{"size":1429,"mtime":1614063905223,"results":"46","hashOfConfig":"25"},{"size":3545,"mtime":1614063904756,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"e6dgv0",{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\index.tsx",[],["101","102"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\App.tsx",["103"],"import React, { useContext, useEffect } from \"react\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport LoginPage from \"./pages/Login/Login\";\nimport ProtectedRoute from \"service/ProtectedRoute\";\nimport LoginRoute from \"service/LoginRoute\";\nimport Dashboard from \"pages/Room/Room\";\nimport Loader from \"pages/Loader/Loader\";\nimport NavigateRoom from \"pages/NavigateRooms/NavigateRooms\";\nimport GuestNameProvider from \"./service/GuestNameContext\";\nimport UserContextProvider, { UserContext } from \"service/UserContext\";\nimport axios, { AxiosResponse } from \"axios\";\nimport { OauthResponse, UserContextTypes } from \"types\";\nimport { OAUTH_CHECK } from \"config\";\n\nexport const isAuthenticated = async () => {\n  const { data }: AxiosResponse<OauthResponse> = await axios({\n    method: \"GET\",\n    url: OAUTH_CHECK,\n    responseType: \"json\",\n    withCredentials: true,\n  });\n  return {\n    isLoggedIn: data.isLoggedIn,\n    data,\n  };\n};\n\nconst App = () => {\n  const { user, saveUserInfo } = useContext(UserContext) as UserContextTypes;\n  useEffect(() => {\n    async function isAuthenticatedWrapper() {\n      const { isLoggedIn, data } = await isAuthenticated();\n\n      localStorage.setItem(\"isLoggedIn\", JSON.stringify(data.isLoggedIn));\n      saveUserInfo(data, isLoggedIn);\n      if (isLoggedIn === false) {\n        return <Redirect to=\"/\"></Redirect>;\n      }\n    }\n    isAuthenticatedWrapper();\n  }, []);\n\n  return (\n    <div style={{ height: \"auto\" }}>\n      <Router>\n        <Switch>\n          <Route path=\"/loader\" component={Loader} />\n          <Route path=\"/room/:id\" component={Dashboard} />\n          <ProtectedRoute exact user={user} path=\"/home\" NavigationRoom={NavigateRoom} />\n          <LoginRoute exact path=\"/\" component={LoginPage} user={user} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </div>\n  );\n};\n\nconst contextWrappedApp = () => {\n  return (\n    <UserContextProvider>\n      <GuestNameProvider>\n        <App />\n      </GuestNameProvider>\n    </UserContextProvider>\n  );\n};\n\nexport default contextWrappedApp;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\reportWebVitals.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\config.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\socket.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\ProtectedRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\GuestNameContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\UserContext.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\service\\LoginRoute.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\store.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\redux\\slices\\AppDataSlice.ts",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Loader\\Loader.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Login.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Room\\Room.tsx",["104"],"import React, { useState, createRef, useRef } from \"react\";\nimport InputOutputFile from \"component/InputOutputFile/InputOutputFile\";\nimport { ReflexContainer, ReflexElement, ReflexSplitter } from \"react-reflex\";\nimport \"react-reflex/styles.css\";\nimport style from \"./Room.module.css\";\nimport { socket } from \"service/socket\";\nimport { useSnackbar } from \"notistack\";\nimport ChatApp from \"component/TextChat\";\nimport VoiceChat from \"component/VoiceChat/VoiceChat\";\nimport { SnackbarProvider } from \"notistack\";\nimport { useParams } from \"react-router-dom\";\nimport MonacoEditor from \"component/Editor/MonacoEditor\";\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.min.css.map\";\nimport clsx from \"clsx\";\nconst Dashboard = () => {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const { id } = useParams<Record<string, string>>();\n\n  React.useEffect(() => {\n    const displayNotification = ({ name, isConnected }: Record<string, unknown>) => {\n      const text = isConnected ? \"connected\" : \"disconnected\";\n      const variantStyle = isConnected ? \"success\" : \"error\";\n      enqueueSnackbar(`${name} is ${text}`, {\n        variant: variantStyle,\n      });\n    };\n    socket.on(\"connected\", (data: Record<string, unknown>) => {\n      displayNotification(data);\n      console.log(`I'm Connected with the backend ${data}`);\n    });\n    socket.on(\"disconnected\", (data: Record<string, unknown>) => {\n      displayNotification(data);\n      console.log(`I'm Connected with the backend ${JSON.stringify(data)}`);\n    });\n  }, []);\n\n  const [code, setCode] = useState<string>();\n  const MonacoEditorRef = useRef<any>();\n  const TextAreaRef = createRef<HTMLDivElement>();\n  const [rows, setRows] = useState(4);\n  const resetEditorLayout = () => {\n    const height = Math.floor(TextAreaRef!.current!.clientHeight);\n    const adjustedRows = height > 340 ? height / 27 : height / 45;\n    setRows(Math.floor(adjustedRows));\n    MonacoEditorRef.current.layout();\n  };\n\n  return (\n    <div className={style.root}>\n      <ReflexContainer orientation=\"horizontal\">\n        <ReflexElement className={style.header} flex={0.05}>\n          Hey\n        </ReflexElement>\n        <ReflexElement>\n          <ReflexContainer orientation=\"vertical\">\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement className={style[\"pane-color\"]}>\n                  <div className={style[\"pane-content\"]}>\n                    <label style={{ height: \"0%\" }}>\n                      Left Pane <br /> Top\n                      <br />\n                      (splitter propagation)\n                    </label>\n                  </div>\n                </ReflexElement>\n                <ReflexSplitter\n                  className={clsx(style.splitter, style[\"splitter-horizontal\"])}\n                  propagate={true}\n                />\n                <ReflexElement className={style[\"pane-color\"]}>\n                  <div>\n                    <label style={{ height: \"0%\" }}>\n                      Left Pane <br /> Middle\n                      <br />\n                      (splitter propagation)\n                    </label>\n                  </div>\n                </ReflexElement>\n                <ReflexSplitter\n                  className={clsx(style.splitter, style[\"splitter-horizontal\"])}\n                  propagate={true}\n                />\n                <ReflexElement className={style[\"pane-color\"]}>\n                  <label style={{ height: \"0%\" }}>\n                    Left Pane <br /> Bottom\n                    <br />\n                    (splitter propagation)\n                  </label>\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* 1st content */}\n            <ReflexSplitter\n              className={clsx(style.splitter, style[\"splitter-verticle\"])}\n              onStopResize={() => resetEditorLayout()}\n            />\n            <ReflexElement flex={0.5}>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement style={{ display: \"flex\" }}>\n                  <MonacoEditor code={code} setCode={setCode} MonacoEditorRef={MonacoEditorRef} />\n                </ReflexElement>\n                <ReflexSplitter\n                  className={clsx(style.splitter, style[\"splitter-horizontal\"])}\n                  onStopResize={() => resetEditorLayout()}\n                />\n                <ReflexElement flex={0.3}>\n                  <InputOutputFile rows={rows} TextAreaRef={TextAreaRef} />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n            {/* 3rd content */}\n            <ReflexSplitter\n              className={clsx(style.splitter, style[\"splitter-verticle\"])}\n              onStopResize={() => resetEditorLayout()}\n            />\n            <ReflexElement>\n              <ReflexContainer orientation=\"horizontal\">\n                <ReflexElement className={style[\"pane-color\"]} flex={0.3}>\n                  <h2>Video Icons</h2>\n                  <VoiceChat params={id} />\n                </ReflexElement>\n                <ReflexSplitter className={clsx(style.splitter, style[\"splitter-horizontal\"])} />\n                <ReflexElement className={style[\"chat-app\"]}>\n                  {/* Chat App Component */}\n                  <ChatApp />\n                </ReflexElement>\n              </ReflexContainer>\n            </ReflexElement>\n          </ReflexContainer>\n        </ReflexElement>\n        <ReflexElement className={style.footer} flex={0.05}>\n          <div className={style[\"pane-content\"]}>\n            <label>Footer (fixed)</label>\n          </div>\n        </ReflexElement>\n      </ReflexContainer>\n    </div>\n  );\n};\n\nexport const NotificationWrappedDashBoard = () => {\n  return (\n    <SnackbarProvider>\n      <Dashboard />\n    </SnackbarProvider>\n  );\n};\n\nexport default NotificationWrappedDashBoard;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\NavigateRooms\\NavigateRooms.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\index.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage.jsx",[],["105","106"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\TextChat\\ChatMessage-styles.ts",[],["107","108"],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\VoiceChat\\VoiceChat.tsx",["109","110","111"],"import React, { useEffect, useRef, useState } from \"react\";\nimport Peer, { Instance, SignalData } from \"simple-peer\";\nimport { socket } from \"service/socket\";\nimport { Avatar, Button } from \"@material-ui/core\";\n\ninterface MediaSrcType {\n  srcObject: MediaStream;\n}\ninterface PeerRefType {\n  peerID: string;\n  peer: Instance;\n}\n\ninterface UserJoinedPayload {\n  signal: SignalData;\n  callerID: string;\n  stream: MediaStream;\n}\n\ninterface ReturnSignalPayload {\n  signal: SignalData;\n  id: string;\n}\n\nconst Video = ({ peer, muted }: { peer: Instance; muted: boolean }) => {\n  const ref = useRef({} as MediaSrcType);\n\n  useEffect(() => {\n    peer.on(\"stream\", (stream: MediaStream) => {\n      ref.current.srcObject = stream;\n    });\n  }, []);\n  console.log(ref);\n  return (\n    <video\n      muted={muted}\n      playsInline\n      autoPlay\n      //@ts-ignore\n      ref={ref}\n      style={{ width: \"150px\", height: \"150px\" }}\n    />\n  );\n};\n\nexport const Room = ({ params }: { params: string }) => {\n  const [peers, setPeers] = useState<Instance[]>([]);\n  const userAudio = useRef({} as MediaSrcType);\n  const [stream, setStream] = useState<MediaStream>();\n  const peersRef = useRef([] as PeerRefType[]);\n  const [audioMuted, setAudioMuted] = useState(false);\n  const roomID = params;\n\n  useEffect(() => {\n    navigator.mediaDevices.getUserMedia({ video: false, audio: true }).then((stream) => {\n      userAudio.current.srcObject = stream;\n      setStream(stream);\n\n      // okay we are joining a room with the given room id huh\n      socket.emit(\"join-room\", roomID);\n      // fetching all the users from the socker io server\n      socket.on(\"all-users\", (users: string[]) => {\n        console.log(users);\n        const peers: Instance[] = [];\n        // looping thorugh all the users we got we want to create a new peer for them -- because peer meshes\n        users.forEach((userID) => {\n          const peer = createPeer(userID, socket.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer,\n          });\n          peers.push(peer);\n        });\n        setPeers(peers);\n      });\n\n      socket.on(\"user-joined\", (payload: UserJoinedPayload) => {\n        /**\n         * @signal - this is the incomming signalz\n         * @calledID - is the id of the user which is calling us\n         * @stream - this is basically our own stream of data\n         *  */\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n\n        setPeers((users) => [...users, peer]);\n      });\n\n      socket.on(\"receiving-returned-signal\", (payload: ReturnSignalPayload) => {\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\n        if (item) item.peer.signal(payload.signal);\n      });\n    });\n  }, []);\n\n  /**\n   * @userToSignal - socekt_id of the person who is already in the room (person being called)\n   * @calledID - SID of person who just joined, caller\n   * @stream - stream<audio,video> data of the person who is calling(caller)\n   *  */\n  function createPeer(userToSignal: string, callerID: string, stream: MediaStream) {\n    const peer = new Peer({\n      // true if this is the peer initiating the connection -- immediately on construction the peer emits the signal\n      initiator: true,\n      trickle: false,\n      stream,\n      // stream is out audio/video object\n    });\n\n    // immediately on construction of the peer it emits an event called signal we need to listen to that event and send data to the serfver\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"sending-signal\", {\n        userToSignal, // user ID of the people who are already in the room\n        callerID, // our own socket id\n        signal, // sending the signal data\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal: SignalData, callerID: string, stream: MediaStream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socket.emit(\"returning-signal\", { signal, callerID });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function toggleMuteAudio() {\n    // if (stream) {\n    setAudioMuted(!audioMuted);\n    // stream.getAudioTracks()[0].enabled = audioMuted;\n  }\n\n  return (\n    <div>\n      {/* <Avatar\n        alt=\"Remy Sharp\"\n        src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n        style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n      ></Avatar> */}\n      <div style={{ display: \"flex\" }}>\n        <video\n          muted\n          //@ts-ignore\n          ref={userAudio}\n          autoPlay\n          playsInline\n          style={{ width: \"400px\", height: \"400px\" }}\n        />\n        {peers.map((peer, index) => {\n          return <Video key={index} peer={peer} muted={false} />;\n        })}\n      </div>\n      <Button\n        onClick={() => {\n          toggleMuteAudio();\n        }}\n      >\n        Mute\n      </Button>\n    </div>\n  );\n};\n\nexport const RoomII = ({ params }: { params: string }) => {\n  console.log(params);\n  return (\n    <>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"row\",\n          flexWrap: \"wrap\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n        <Avatar\n          alt=\"Remy Sharp\"\n          src={`https://stylizedbay.com/wp-content/uploads/2018/02/unknown-avatar.jpg`}\n          style={{ width: \"64px\", height: \"64px\", margin: \".6rem 1rem\" }}\n        ></Avatar>\n      </div>\n    </>\n  );\n};\n\n// export default RoomII;\n\nexport default Room;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoEditor.tsx",["112"],"import React, { useEffect, useContext } from \"react\";\nimport Editor from \"@monaco-editor/react\";\nimport { Convergence } from \"@convergence/convergence\";\nimport { CONVERGENCE_URL } from \"config\";\nimport MonacoConvergenceAdapter from \"./MonacoAdapter\";\nimport { GuestNameContext } from \"service/GuestNameContext\";\nimport { UserContext } from \"service/UserContext\";\nimport { GuestNameContextTypes, UserContextTypes } from \"types\";\nimport \"@convergencelabs/monaco-collab-ext/css/monaco-collab-ext.css\";\nimport generate from \"project-name-generator\";\n\ninterface AppProps {\n  code: string | undefined;\n  setCode: React.Dispatch<React.SetStateAction<string | undefined>>;\n  MonacoEditorRef: React.MutableRefObject<any>;\n}\n\nconst MonacoEditor: React.FC<AppProps> = ({ code, setCode, MonacoEditorRef }) => {\n  const handleEditorDidMount = (editor: any) => {\n    MonacoEditorRef.current = editor;\n  };\n\n  const { user } = useContext(UserContext) as UserContextTypes;\n  const { guestName } = useContext(GuestNameContext) as GuestNameContextTypes;\n\n  // if login then user that else guest name else randome name :)))\n  const username = user?.name ? user.name : guestName ? guestName : generate({ words: 1 }).spaced;\n\n  useEffect(() => {\n    Convergence.connectAnonymously(CONVERGENCE_URL, username)\n      .then((domain) => {\n        // Now open the model, creating it using the initial data if it does not exist.\n        return domain.models().openAutoCreate({\n          collection: \"project-caucus`\",\n          id: \"monaco-editor-caucus\",\n          ephemeral: false,\n          data: { text: code },\n        });\n      })\n      .then((model) => {\n        const adapter = new MonacoConvergenceAdapter(MonacoEditorRef.current, model.elementAt(\"text\"));\n        adapter.bind();\n      })\n      .catch((error) => {\n        console.error(\"Could not open model \", error);\n      });\n  }, []);\n\n  return (\n    <div style={{ flexGrow: 1, overflow: \"hidden\" }}>\n      <Editor\n        onMount={(editor) => handleEditorDidMount(editor)}\n        theme=\"vs-dark\"\n        defaultLanguage=\"cpp\"\n        onChange={(value) => setCode(value)}\n        options={{ wordWrap: \"on\" }}\n      />\n    </div>\n  );\n};\n\nexport default MonacoEditor;\n","C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\Editor\\MonacoAdapter.js",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\pages\\Login\\Particles.config.tsx",[],"C:\\Users\\risha\\Desktop\\ReactJS\\rtce-2\\src\\component\\InputOutputFile\\InputOutputFile.tsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":41,"column":6,"nodeType":"119","endLine":41,"endColumn":8,"suggestions":"120"},{"ruleId":"117","severity":1,"message":"121","line":36,"column":6,"nodeType":"119","endLine":36,"endColumn":8,"suggestions":"122"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"113","replacedBy":"123"},{"ruleId":"115","replacedBy":"124"},{"ruleId":"117","severity":1,"message":"125","line":32,"column":6,"nodeType":"119","endLine":32,"endColumn":8,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":49,"column":10,"nodeType":"129","messageId":"130","endLine":49,"endColumn":16},{"ruleId":"117","severity":1,"message":"131","line":97,"column":6,"nodeType":"119","endLine":97,"endColumn":8,"suggestions":"132"},{"ruleId":"117","severity":1,"message":"133","line":47,"column":6,"nodeType":"119","endLine":47,"endColumn":8,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'saveUserInfo'. Either include it or remove the dependency array.","ArrayExpression",["137"],"React Hook React.useEffect has a missing dependency: 'enqueueSnackbar'. Either include it or remove the dependency array.",["138"],["135"],["136"],"React Hook useEffect has a missing dependency: 'peer'. Either include it or remove the dependency array.",["139"],"@typescript-eslint/no-unused-vars","'stream' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'roomID'. Either include it or remove the dependency array.",["140"],"React Hook useEffect has missing dependencies: 'MonacoEditorRef', 'code', and 'username'. Either include them or remove the dependency array.",["141"],"no-global-assign","no-unsafe-negation",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [saveUserInfo]",{"range":"152","text":"153"},"Update the dependencies array to be: [enqueueSnackbar]",{"range":"154","text":"155"},"Update the dependencies array to be: [peer]",{"range":"156","text":"157"},"Update the dependencies array to be: [roomID]",{"range":"158","text":"159"},"Update the dependencies array to be: [MonacoEditorRef, code, username]",{"range":"160","text":"161"},[1438,1440],"[saveUserInfo]",[1532,1534],"[enqueueSnackbar]",[733,735],"[peer]",[2843,2845],"[roomID]",[1867,1869],"[MonacoEditorRef, code, username]"]